<class name="scrollingBox" height="100" width="200">

    <!-- text variables -->
    <attribute name="fgcolor" type="color" value="0x000000"/>
    <attribute name="textbgcolor" type="color" value="0xFFFFFF"/>
    <attribute name="xpad" type="number" value="5"/>
    <attribute name="rowheight" type="number" value="30"/>
    <attribute name="rowwidth" type="number" value="5"/>

    <!-- end pointers -->
    <attribute name="last"/>
    <attribute name="first"/>

    <!-- internal flags -->
    <attribute name="notFirstRowAdded" type="boolean" value="false"/>
    <attribute name="listFull" type="boolean" value="false"/>          
		
    <method event="oninit">
        this.first = null;
        this.last = null;
        this.rowwidth = this.width-this.xpad;
    </method>

    <method name="addRow" args="text">
        <![CDATA[
		    // create a scrolling text object
	        var row = new scrollingText(this.container,
			    {
					font:'default',
					fontsize:16,			
					text:text,
					height:this.rowheight,					
					fgcolor:this.fgcolor
			    }
			);
                               			   
			if (notFirstRowAdded) {
                //setup the references to the current end of the list
			    row.prev = this.last;
				row.onprev();
			}else{
			    // this is the first row being added do some setup and toggle the flag
                this.first = row;
                this.notFirstRowAdded = true;
            }

	        // shrink any names that are too big
       	    while (row.width > this.rowwidth && row.fontsize > 2) {
                row.setAttribute("fontsize",row.fontsize-1);
            }
       	         
            if (listFull){
                // save the first item
                var oldfirst = this.first;
			
                // 2nd is now first
                this.first = oldfirst.next;
                this.first.notfirst.remove();
                this.first.prev = null;
	
                //destroy the first item
				oldfirst.destroy();

                //animate the list to move 1 position
		        this.first.animate("y", 0-(this.rowheight*2), 500);
            } else {
                // list size is 3 greater than can fit in the window.
                var listSize = (this.height - (this.height%this.rowheight) )/ this.rowheight + 2;
                this.listFull = this.container.subnodes.length > listSize;
            }
            //the new row is the end of the list
		    this.last = row;

            //Debug.write("nodes ["+((this.height - (this.height%this.rowheight) )/ this.rowheight + 2)+"]: " + this.container.subnodes.length);
        ]]>
    </method>

    <view name="container" height="$once{parent.height}" width="$once{parent.width}" clip="true"/>
</class>


<!-- ================================================ -->
<!--  Connection scriptlet - creates a connections    -->
<!--     and includes handlers for reconnecting       -->
<!--  to the server automatically                     -->
<!-- ================================================ -->

<datasource name="mycd">
    <dataset name="incoming" src="http://localhost:8080/MessageChannel/input" request="false" type="http"/>
    <dataset name="outgoing" src="http://localhost:8080/MessageChannel/input" request="false" type="http"/>
    <dataset name="reset" src="http://localhost:8080/MessageChannel/input" request="false" type="http"/>
    
    <attribute name="channel" type="string" value="biggerscreen"/>
    <attribute name="msgBox" />
    
    <method name="sendMessage" args="message">
        <![CDATA[
            var src = "q="+this.channel+"&a=a&m=" + message;
            this.outgoing.querystring=src;
            this.outgoing.doRequest();
        ]]>
    </method>

    <method name="showBox">
        this.msgBox.animate("opacity",1.0,500);
    </method>

    <method name="hideBox">
        this.msgBox.animate("opacity",0.0,500);
    </method>

    <method event="oninit">
        <![CDATA[
            canvas.mycd.incoming.querystring = "q="+ this.channel +"&d=1";
            canvas.mycd.reset.querystring = "q="+ this.channel +"&a=c";
            canvas.mycd.reset.doRequest();

            var msgBox = new borderedBox(canvas.content, {width: 400, height:100, valign:'middle', align:'center' , opacity:0, viewOpacity:0.5});
            this.msgBox = msgBox;
            new LzText(msgBox,{name:'msg', text: '.:: Initializing ::.', valign:'middle', align:'center', fontsize:20, resize:true, fgcolor:0xFF0000});
        ]]>
    </method>

    <!-- method that handles reconnection, calls itself until it can connect -->
    <method name="reconnect">
        if (!this.connected) {
            Debug.write("attempting reconnect");
            this.retrycount=this.retrycount+1;
            this.msgBox.msg.setText(".:: Reconnect Attempt " + this.retrycount + " ::.");
            this.connect();
            var del = new LzDelegate(this, "reconnect");
            LzTimer.resetTimer( del, retry);
        }
    </method>

</datasource>
    <class name="ping">
        <attribute name="color" value="0x000000" type="color"/>
        <attribute name="radius" value="1" type="number"/>
        <attribute name="x" value="0"/>
        <attribute name="y" value="0"/>
        <attribute name="circles" />
        <attribute name="del" />

        <method event="oninit">
            this.circles = new Array();
        </method>

        <method event="onradius">
            this.draw();
        </method>

        <animator name="grow" to="100" duration="8000" attribute="radius" motion="linear" start="false"/>

        <method name="draw" >
            <![CDATA[
                // The way this animation is written any radius above 55 the pings will have faded
                // completely and there is nothing to draw.  Just return. 
                if (radius >= 55) {
                    this.circles[2].destroy();
                    return;
                }

                var opacity0 = 1;
                var opacity1 = 1;
                var opacity2 = 1;

                if (radius > 10) {
                    opacity0 = 1-this.radius/35;
                    opacity1 = 1-this.radius/45;
                    opacity2 = 1-this.radius/55;
                }

                if(this.circles[0]){this.circles[0].destroy();}
                if (opacity1 > 0){
                    this.circles[0] = new circle(this);
                    this.circles[0].setAttribute("r", this.radius);
                    this.circles[0].setAttribute("x", x);
                    this.circles[0].setAttribute("y", y);
                    this.circles[0].setAttribute("lineWidth", 2);
                    this.circles[0].redraw();
                    this.circles[0].setAttribute("opacity",opacity0);
                }

                if(this.circles[1]){this.circles[1].destroy();}
                if (opacity1 > 0) {
                    this.circles[1] = new circle(this);
                    this.circles[1].setAttribute("r", this.radius*2/3);
                    this.circles[1].setAttribute("x", x);
                    this.circles[1].setAttribute("y", y);
                    this.circles[1].setAttribute("lineWidth", 2);
                    this.circles[1].setAttribute("opacity",opacity1);
                    this.circles[1].redraw();
                }

                if(this.circles[2]){this.circles[2].destroy();}
                if (opacity2 > 0) {
                    this.circles[2] = new circle(this);
                    this.circles[2].setAttribute("r", this.radius/3);
                    this.circles[2].setAttribute("x", x);
                    this.circles[2].setAttribute("y", y);
                    this.circles[2].setAttribute("lineWidth", 2);
                    this.circles[2].redraw();
                    this.circles[2].setAttribute("opacity",opacity2);
                }
            ]]>
        </method>

        <method name="destroy">
            <![CDATA[
               for(var i=0; i<this.circles.length; i++) {
                    if (this.circles[i]){
                        this.circles[i].destroy();
                    }
               }
               super.destroy();
            ]]>
        </method>

    </class>

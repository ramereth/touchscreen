<screen id="screen_osl_ftpusersmap" duration="450000" x="0" y="0">

    <view name='background' bgcolor="0x154459" width="1360" height="768" opacity="0.0"/>

    <attribute name="currentPointIndex" type="number" value="0"/>
    <attribute name="maxPoints" type="number" value="100"/>
    <attribute name="points" />
    <attribute name="updateMapDelegate" />
    <attribute name="mapRefresh" type="number" value="5000" />

    <method name="_init">
        this.points = new Array();
        this.updateMapDelegate = new LzDelegate(this, "updateMap" );
        LzTimer.resetTimer(this.updateMapDelegate, 3000);
        this.currentPointIndex = -1;
    </method>

    <method name="updateMap">        
        dset_ftpUserMap.doRequest();
        LzTimer.resetTimer(this.updateMapDelegate, this.mapRefresh);
    </method>
    
    <method name="createPoint" args="lat, lon, label">

        //change the last point created to a different collor and explicitly
        //destroy its ping in case it did not destroy itself.
        if (this.currentPointIndex != -1) {
            this.points[this.currentPointIndex].animate("fgcolor", "0x0000ff", 100);
            this.points[this.currentPointIndex].ping.destroy();
        }

        // determine what array index is being used. increment to the
        // end of the array and then start at the beginning.
        this.currentPointIndex = this.currentPointIndex + 1;
        if (this.currentPointIndex >= this.maxPoints ){
            this.currentPointIndex = 0;
        }

        // destroy the old point in this index if there is one
        if (this.points[this.currentPointIndex]) {
            this.points[this.currentPointIndex].destroy();
        }

        // create a new point
        this.points[this.currentPointIndex] = new FtpUserPoint(this.map);
        this.points[this.currentPointIndex].lon = lon;
        this.points[this.currentPointIndex].lat = lat;
        this.points[this.currentPointIndex].updatePosition();

        // create a scrolling label for the new point
        //var textBlock = new scrollingLabel(labelScrollBox);
        //textBlock.setText(label);
    </method>


    <view name="map" resource="ftpusermap" >        
        <text resize="true" fontsize="20" fgcolor="blue" x="400" y="20">Sample of ftp.osuosl.org users</text>        
    </view>    

    <animatorgroup name="hideMap" process="sequential" start="false">        
        <animator attribute="opacity" to="0.0" duration="500" target="${parent.parent.map}"/>
        <animator attribute="opacity" to="0.0" duration="500" target="${parent.parent.background}"/>
        <animator attribute="y" to="-800" duration="0" target="${parent.parent.map}"/>
        <animator attribute="y" to="-800" duration="0" target="${parent.parent.background}"/>
    </animatorgroup>

    <animatorgroup name="showMap" process="sequential" start="false">
        <animator attribute="y" to="0" duration="0" target="${parent.parent.map}"/>
        <animator attribute="y" to="0" duration="0" target="${parent.parent.background}"/>
        <animator attribute="opacity" to="1.0" duration="500" target="${parent.parent.background}"/>
        <animator attribute="opacity" to="1.0" duration="500" target="${parent.parent.map}"/>
    </animatorgroup>

    <method name="_hide">
        this.hideMap.doStart();
        return 1500;
    </method>

    <method name="_show">        
        this.showMap.doStart();
        return 1500;
    </method>

    <method name="_start">
            LzTimer.resetTimer(this.updateMapDelegate, 1000);
    </method>

    <method name="_stop">
            LzTimer.removeTimer(this.updateMapDelegate);
    </method>

</screen>
